sudo: false
language: cpp
env:
  global:
    # Intel license key relative for jeffhammond/PRK
    - secure: "TKJR7ijqNQr6yaJIqYGbV1pd0TVw+i6Vwhw8DwX+rGLDG/W6gF7nFRIQwnaSEeE/NU9uHYZuf2I0nwxeBSMJncGVdsKVOClqmDzSmj+PFkzNt/0iw8DSdAN0dhwK8RJ1eUoOQ9SaEKw/OITo3wJOp10Sb/dtlsZLIx88oDV+jEcWJLdSzSixQuzPpJDcsMxhIcCJ7al2lGnb5puS0MxXgnuFJ3yw4Tc7UeYjszwZhV7ID0x2JFCQYw007r+UsbtUVwIrdJF7rszTeMIAsQfjdzJYjFBsN9v7v7nqD4PKyRP8I4AAUPTSyDZR35phRM/40rk+hFvyXcyZQuZlrlZl1wIgUE53xoJEQjwx6+Vl82CdGPu7oDoyhiWSR1VhcRjyizs5mhWmWj7oMml4LgsG+OwBtwoKNBTZwrWKxR8/gS0ooEuF3UT9wnQBukuSHmssJbDoDxHBV1pfo/N3YZPkARqueM+V31ZaN4dY7GEW/OevyOq14plxDuRBwQsRa32IfCDSg1eu74sNXloHonTw7gtlBzCiOwzoDyYUX9xjeRLxURl8JO5gwWJlJpF6uYxfVKbpG/s83t6GYCRQUya4AtzR1j765SBposobOMENtt5ZcPth2aHal9I7NbF4UlhoMDc6zWZN3gpx6shtqgEbZ9f9QVuoGazkXlyXNh0QwZw="
# this is for Python, per http://danielnouri.org/notes/2012/11/23/use-apt-get-to-install-python-dependencies-for-travis-ci/
virtualenv:
  system_site_packages: true
os:
  - linux
  - osx
# Travis will export CC=$compiler
compiler:
  - clang
  - gcc
  - touch ~/icc ; gcc
matrix:
  exclude:
    # Intel for Mac not implemented yet...
    - os: osx
      compiler: touch ~/icc ; gcc
    # only test Clang OpenMP on Mac, where we can Homebrew it
    - os: linux
      compiler: clang
      env: PRK_TARGET=allopenmp
    - os: linux
      compiler: clang
      env: PRK_TARGET=allmpiomp
    # dealing with broken GCC on Mac not worth it here
    - os: osx
      compiler: gcc
      env: PRK_TARGET=allopenmp
    - os: osx
      compiler: gcc
      env: PRK_TARGET=allmpiomp
    # Clang UPC requires source build, which probably takes too long
    - compiler: clang
      env: PRK_TARGET=allupc
           UPC_IMPL=gupc
    ##- compiler: cc
    ##  env: PRK_TARGET=allupc
    ##       UPC_IMPL=gupc
    # no binary install yet, source build impossible (too much time+stdout)
    - os: osx
      env: PRK_TARGET=allupc
           UPC_IMPL=gupc
    # GUPC only makes sense with CC=gcc
    ##- compiler: cc
    ##  env: PRK_TARGET=allupc
    ##       UPC_IMPL=gupc
    - compiler: clang
      env: PRK_TARGET=allupc
           UPC_IMPL=gupc
    # Mac issue with thread_t (see https://github.com/humairakamal/fgmpi/pull/1)
    - os: osx
      env: PRK_TARGET=allfgmpi
    # Revisit this once Grappa is working with Clang
    - compiler: gcc
      env: PRK_TARGET=allgrappa
    # Mac + Chapel + GASNet does not work and I do not care
    - os: osx
      env: PRK_TARGET=allchapel
           CHPL_COMM=gasnet
    # UPC GASNet OFI conduit is busted, perhaps due to SSH spawner
    - env: PRK_TARGET=allupc
           UPC_IMPL=bupc
           GASNET_CONDUIT=ofi
           PRK_FLAGS="-Wc,-O3"
    # probably because of old GCC (4.6)
    - os: linux
      compiler: gcc
      env: PRK_TARGET=allhpx5
    # Travis whitelist missing three Boost packages HPX-3 needs
    - os: linux
      env: PRK_TARGET=allhpx3
    # LLVM Fortran is not ready.
    - compiler: clang
      env: PRK_TARGET=allfortranserial
    - compiler: clang
      env: PRK_TARGET=allfortranopenmp
    - compiler: clang
      env: PRK_TARGET=allfortranpretty
    - compiler: clang
      env: PRK_TARGET=allfortrancoarray
    # Python does not use compiler so only test one of them per OS (Clang)
    - compiler: gcc
      env: PRK_TARGET=allpython
    - compiler: gcc
      env: PRK_TARGET=alljulia
  allow_failures:
    # will fail if numpy package cannot be acquired via apt
    - env: PRK_TARGET=allpython
    # Julia
    - os: linux
      env: PRK_TARGET=alljulia
    # Linux may not have GCC-6...
    - os: linux
      compiler: gcc
      env: PRK_TARGET=allfortrancoarray
    # UPC over MPICH on Mac hangs - may be async progress issue
    - os: osx
      env: PRK_TARGET=allupc
           UPC_IMPL=bupc
           GASNET_CONDUIT=mpi
           PRK_FLAGS="-Wc,-O3"
    # BUPC on Mac is annoying
    - os: osx
      env: PRK_TARGET=allupc
           UPC_IMPL=bupc
           GASNET_CONDUIT=udp
           PRK_FLAGS="-Wc,-O3"
    - os: osx
      env: PRK_TARGET=allupc
           UPC_IMPL=bupc
           GASNET_CONDUIT=smp
           PRK_FLAGS="-Wc,-O3"
    # GUPC will fail when libnuma cannot be acquired via apt
    - env: PRK_TARGET=allupc
           UPC_IMPL=gupc
    # we have lots of Grappa issues...
    - env: PRK_TARGET=allgrappa
    # Jeff does not expect these to work yet
    ##- compiler: cc
    ##  env: PRK_TARGET=allfgmpi
    ##- compiler: cc
    ##  env: PRK_TARGET=allampi
    ##- compiler: cc
    ##  env: PRK_TARGET=allcharm++
    ##- compiler: cc
    ##  env: PRK_TARGET=allupc
    ##- compiler: cc
    ##  env: PRK_TARGET=allhpx3
    ##- compiler: cc
    ##  env: PRK_TARGET=allhpx5
    ##- compiler: cc
    ##  env: PRK_TARGET=allchapel
    ##- compiler: cc
    ##  env: PRK_TARGET=alllegion
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    #  Boost is for Grappa and HPX
    #- boost-latest
    # clang-3.8 comes from this
    #- llvm-toolchain-precise
    packages:
    # Python Numpy only
    - python-numpy
    # Required by GUPC
    - libnuma-dev
    # Grappa and HPX use CMake
    - cmake
    - gcc-4.8
    - g++-4.8
    - gfortran-4.8
    - gcc-4.9
    - g++-4.9
    - gfortran-4.9
    - gcc-5
    - g++-5
    - gfortran-5
    # This should provide OpenMP
    #- clang-3.8
    # Boost is for Grappa and HPX-3 - reactivate with them
    # Grappa needs these (according to their .travis.yml)
    #- libboost-date-time1.55-dev
    #- libboost-exception1.55-dev
    #- libboost-filesystem1.55-dev
    #- libboost-iostreams1.55-dev
    #- libboost-math1.55-dev
    #- libboost-random1.55-dev
    #- libboost-regex1.55-dev
    #- libboost-serialization1.55-dev
    #- libboost-signals1.55-dev
    #- libboost-system1.55-dev
    #- libboost-test1.55-dev
    #- libboost-timer1.55-dev
    # HPX-3 needs these - not whitelisted yet
    #- libboost_chrono1.55-dev
    #- libboost_program_options1.55-dev
    #- libboost_thread1.55-dev
env:
#
# VIM cheatsheet
#  * comment out lines m to n by prepending #
#    :m,n s/^/#/g
#
  - PRK_TARGET=allserial
#  - PRK_TARGET=allpython
#  - PRK_TARGET=alljulia
#  - PRK_TARGET=allfortranserial
#  - PRK_TARGET=allfortranopenmp
#  - PRK_TARGET=allfortranpretty
#  - PRK_TARGET=allfortrancoarray
#  - PRK_TARGET=allopenmp
#  - PRK_TARGET=allmpi1
#  - PRK_TARGET=allshmem
#  - PRK_TARGET=allmpirma
#  - PRK_TARGET=allmpishm
#  - PRK_TARGET=allmpiomp
#  - PRK_TARGET=allampi
#  - PRK_TARGET=allfgmpi
#  - PRK_TARGET=allcharm++
#  - PRK_TARGET=allupc
#    UPC_IMPL=gupc
#  - PRK_TARGET=allupc
#    UPC_IMPL=bupc
#    GASNET_CONDUIT=smp
#    PRK_FLAGS="-Wc,-O3"
#  - PRK_TARGET=allupc
#    UPC_IMPL=bupc
#    GASNET_CONDUIT=udp
#    PRK_FLAGS="-Wc,-O3"
#   # Optinal: We do not need to test BUPC this thoroughly every time
#  - PRK_TARGET=allupc
#    UPC_IMPL=bupc
#    GASNET_CONDUIT=mpi
#    PRK_FLAGS="-Wc,-O3"
#  - PRK_TARGET=allupc
#    UPC_IMPL=bupc
#    GASNET_CONDUIT=ofi
#    PRK_FLAGS="-Wc,-O3"
    # Chapel kernels are not merged yet.  Activate these when they are.
#  - PRK_TARGET=allchapel
#    CHPL_COMM=none
#  - PRK_TARGET=allchapel
#    CHPL_COMM=gasnet
   # HPX-3 kernels are not merged yet.  Activate these when they are.
#  - PRK_TARGET=allhpx3
   # HPX-5 kernels are not merged yet.  Activate these when they are.
#  - PRK_TARGET=allhpx5
   # Grappa is a problem.  No reason to test it every time.
#  - PRK_TARGET=allgrappa
before_install:
  - pwd
  - export TRAVIS_HOME=$PWD
  - export TRAVIS_ROOT=$TRAVIS_HOME/PRK-deps
  - mkdir -p $TRAVIS_ROOT
  - sh ./travis/install-intel.sh $TRAVIS_ROOT $PRK_TARGET
  - source ~/.bashrc # updated by install-intel.sh
install:
  - export PATH=$TRAVIS_ROOT/bin:$PATH
  - export PATH=$TRAVIS_ROOT/gcc/bin:$PATH
  - export PATH=$TRAVIS_ROOT/cmake/bin:$PATH
  - sh ./travis/install-deps.sh $TRAVIS_ROOT $PRK_TARGET
before_script:
  - pwd
script:
  - sh ./travis/build-run-prk.sh $TRAVIS_ROOT $PRK_TARGET
after_failure:
  - echo "Sad panda"
  # enabling these makes the failure output spill the limit of the Travis terminal
  #- find . -name config.log -exec cat {} ";"
  #- find . -name CMakeOutput.log -exec cat {} ";"
  #- find . -name CMakeError.log -exec cat {} ";"
notifications:
  email:
    recipients:
      - jeff.science@gmail.com
    on_success: [change]
    on_failure: [always]
