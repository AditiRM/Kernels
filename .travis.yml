sudo: false
language: cpp
env:
  matrix:
  - PRK_TARGET=allserial
  - PRK_TARGET=allopenmp
  - PRK_TARGET=allfortranserial
  - PRK_TARGET=allfortranopenmp
  - PRK_TARGET=allfortranpretty
  - PRK_TARGET=allfortrancoarray
  - PRK_TARGET=allmpi1
  - PRK_TARGET=allmpirma
  - PRK_TARGET=allmpishm
  - PRK_TARGET=allmpiomp
  - PRK_TARGET=allshmem
  - PRK_TARGET=allampi
  - PRK_TARGET=allfgmpi
  - PRK_TARGET=allcharm++
  - PRK_TARGET=allgrappa
  - PRK_TARGET=allpython
  - PRK_TARGET=alljulia
  - PRK_TARGET=allupc
    UPC_IMPL=gupc
  - PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=smp PRK_FLAGS="-Wc,-O3"
  - PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=udp PRK_FLAGS="-Wc,-O3"
  # Optional: We do not need to test BUPC this thoroughly every time
  #- PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=mpi PRK_FLAGS="-Wc,-O3"
  #- PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=ofi PRK_FLAGS="-Wc,-O3"
  # Chapel kernels are not merged yet.  Activate these when they are.
  #- PRK_TARGET=allchapel CHPL_COMM=none
  #- PRK_TARGET=allchapel CHPL_COMM=gasnet
  # HPX-3 kernels are not merged yet.  Activate these when they are.
  #- PRK_TARGET=allhpx3
  # HPX-5 kernels are not merged yet.  Activate these when they are.
  #- PRK_TARGET=allhpx5
  global:
  - secure: "gP1KoSvA83l99gqHRHIclXuMMXKhrNGajFy1/+Q/Gw0gcSeRCcRp4HWmzyJIibiuUceZnpeM3fwJDu3AKjZZ07/2J66TtI6YoxHKvOuSyhJXiIv3A0j5yubOX1dQA3qVKLqBr6qsdtOiQs57OSkZMx2YRsmORB2eRGUfnFAxJwvxuj3Rk/BChAVNRK/6XyXiR+OWDcxCUpkIwPk7qiUIqBZ/AoygxUd3kHQ9+Y29pzP+HIsBA/JMc+4kuAm2YasMogYyD9x3unF8ziyr1T7SgQ0ZxpbdgL1yqJEUkqDcGkVtqxdIhWuSDEDJEVEX60wVP2cBdRjjBZjC7oNLB7vQS6/vcx2elWqX2KVvWwjj7xlMf/9VEqb9Nic/SE8Jn4UrFCSCEZvmdb9MeW1AGjpBaJjKMh+4131YCpmkxpk0oR2N0u3qIJzSocWRWfTsQbD3w7/N1LzxnWbL3NpZh1omf+T4C42/ZMutx2EVzs7lEagLel+vnGSYkwPljo1HGjvlZx4moOCtxSQXSLtoIKNmFp3CHftg2/bfS8ujl4SHof4GgFx9Kg7Mdsf9acK3O9ZRselJFZZEUEqOoLoq9yxSX2HfufuIaIvmcR8czruSlvVchOol7Wr+oXn2u7DNro9BS0yXB9Enujr49sUfJTpH97t9eiRux8VPW2DleAyZTIs="
  - secure: "DiVUxUAQYAl/uNU+JcPpLbgxzo8zOC0fokB/gBwadlp8Q4seO9cldKirbMerUt2nqOW7lB+3sxZLtXm9DmYRHfbprGCQ0+9ldRRjsRsxnXlW2Sruhbdvlph2mnR4C0Y/mR2Ks6Vp0I4ykclPLo/ttA/XN9LRKTkALlfaa7obbKRJ6AaMJTvxXw5ENQBdC6nvDF91Q0QkQl6SZP2QYirjLUMSXkLuMa5mkOPVukTDhiP7klMklttvMkWA8+seKkcWIwwZ4kXV/Fm7oQ5YDInpNN33w4PKLwQT479TdgTZ4e5HVGSIkHc/k/4tTuh5FsgVA6U7RCMp+rQ9hZL2mBzNVpw9cJLYMXvx93TsNwIrbCJWOTqMbl6x/lvDU//XKhqcYBnzvn211FjsTU4N1YBDwyENrsvHBjoVAscQDXxbE3junauTlEqbLLQ5pb6pfGDl8Djk5Rotq2XJBueloSyddSFbmV+6Q/qX0YvmWBYW1CAZVvYcPmWXIdWfirSJdTLIlervnvyCSdAEHF66Gpu5poLxCgCDT3Uz7xo88KxhmogmKNmnnZEt97MPbTWeoL/1lAEjHAiSZJvVjh1MNrZeQobtTqJK9y91nI14jsx+vMZFc9VDJiGGlWCZZAXjW8lo005M5fc1UAO4thH7w/yZSeEC3LUzLJuc/sJJGm7wr2I="
# this is for Python, per http://danielnouri.org/notes/2012/11/23/use-apt-get-to-install-python-dependencies-for-travis-ci/
virtualenv:
  system_site_packages: true
os:
- linux
- osx
# Travis will export CC=$compiler
compiler:
- gcc
- clang
- touch ~/use-intel-compilers ; gcc
matrix:
  exclude:
  # Intel for Mac not setup yet
  - os: osx
    compiler: touch ~/use-intel-compilers ; gcc
  # Clang does not support OpenMP yet and not willing to build from source.  Save this for Mac where we can Brew it.
  - os: linux
    compiler: clang
    env: PRK_TARGET=allopenmp
  - os: linux
    compiler: clang
    env: PRK_TARGET=allmpiomp
  # dealing with broken GCC on Mac not worth it here
  - os: osx
    compiler: gcc
    env: PRK_TARGET=allopenmp
  - os: osx
    compiler: gcc
    env: PRK_TARGET=allmpiomp
  # Clang UPC requires source build, which probably takes too long
  - compiler: clang
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  # Intel does not make sense with Intrepid GCC/Clang UPC
  - compiler: touch ~/use-intel-compilers ; gcc
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  # Source build impossible (too much time+stdout)
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  - compiler: clang
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  # Revisit this once Grappa is working with Clang
  - compiler: gcc
    env: PRK_TARGET=allgrappa
  # Mac + Chapel + GASNet does not work and I do not care
  - os: osx
    env: PRK_TARGET=allchapel CHPL_COMM=gasnet
  # UPC GASNet OFI conduit is busted, perhaps due to SSH spawner
  - env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=ofi PRK_FLAGS="-Wc,-O3"
  # probably because of old GCC (4.6)
  - os: linux
    compiler: gcc
    env: PRK_TARGET=allhpx5
  # Travis whitelist missing three Boost packages HPX-3 needs
  - os: linux
    env: PRK_TARGET=allhpx3
  # LLVM Fortran is not ready.
  - compiler: clang
    env: PRK_TARGET=allfortranserial
  - compiler: clang
    env: PRK_TARGET=allfortranopenmp
  - compiler: clang
    env: PRK_TARGET=allfortranpretty
  - compiler: clang
    env: PRK_TARGET=allfortrancoarray
  # Python does not use compiler so only test one of them per OS (Clang)
  - compiler: gcc
    env: PRK_TARGET=allpython
  - compiler: gcc
    env: PRK_TARGET=alljulia
  - compiler: touch ~/use-intel-compilers ; gcc
    env: PRK_TARGET=allpython
  - compiler: touch ~/use-intel-compilers ; gcc
    env: PRK_TARGET=alljulia
  # Mac issue with thread_t (see https://github.com/humairakamal/fgmpi/pull/1)
  - os: osx
    env: PRK_TARGET=allfgmpi
  allow_failures:
  # will fail if numpy package cannot be acquired via apt
  - env: PRK_TARGET=allpython
  - os: linux
    env: PRK_TARGET=alljulia
  # Linux may not have GCC-6...
  - os: linux
    compiler: gcc
    env: PRK_TARGET=allfortrancoarray
  # UPC over MPICH on Mac hangs - may be async progress issue
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=mpi PRK_FLAGS="-Wc,-O3"
  # BUPC on Mac is annoying
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=udp PRK_FLAGS="-Wc,-O3"
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=smp PRK_FLAGS="-Wc,-O3"
  # GUPC will fail when libnuma cannot be acquired via apt
  - env: PRK_TARGET=allupc UPC_IMPL=gupc
  # we have lots of Grappa issues...
  - env: PRK_TARGET=allgrappa
  # MPI implementations of Transpose hand with Intel compilers (why?!?!)
  - compiler: touch ~/use-intel-compilers ; gcc
    env: PRK_TARGET=allmpi1
  - compiler: touch ~/use-intel-compilers ; gcc
    env: PRK_TARGET=allmpiomp
  - compiler: touch ~/use-intel-compilers ; gcc
    env: PRK_TARGET=allmpishm
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    # clang-3.8 comes from this
    - llvm-toolchain-precise
    #  Boost is for Grappa and HPX
    #- boost-latest
    packages:
    - python-numpy
    - gcc-4.9
    - g++-4.9
    - gfortran-4.9
    - gcc-5
    - g++-5
    - gfortran-5
    # Required by GUPC
    - libnuma-dev
    # This should provide OpenMP
    - clang-3.8
    # Grappa and HPX use CMake
    - cmake
    # Boost is for Grappa and HPX-3 - reactivate with them
    # Grappa needs these (according to their .travis.yml)
    #- libboost-date-time1.55-dev
    #- libboost-exception1.55-dev
    #- libboost-filesystem1.55-dev
    #- libboost-iostreams1.55-dev
    #- libboost-math1.55-dev
    #- libboost-random1.55-dev
    #- libboost-regex1.55-dev
    #- libboost-serialization1.55-dev
    #- libboost-signals1.55-dev
    #- libboost-system1.55-dev
    #- libboost-test1.55-dev
    #- libboost-timer1.55-dev
    # HPX-3 needs these - not whitelisted yet
    #- libboost_chrono1.55-dev
    #- libboost_program_options1.55-dev
    #- libboost_thread1.55-dev
before_install:
- pwd
- export TRAVIS_HOME=$PWD
- export TRAVIS_ROOT=$TRAVIS_HOME/PRK-deps
- mkdir -p $TRAVIS_ROOT
- sh ./travis/install-intel.sh $TRAVIS_ROOT $PRK_TARGET
- source ~/.bashrc
install:
- export PATH=$TRAVIS_ROOT/bin:$PATH
- export PATH=$TRAVIS_ROOT/gcc/bin:$PATH
- export PATH=$TRAVIS_ROOT/cmake/bin:$PATH
- sh ./travis/install-deps.sh $TRAVIS_ROOT $PRK_TARGET
before_script:
- pwd
script:
- sh ./travis/build-run-prk.sh $TRAVIS_ROOT $PRK_TARGET
after_failure:
- echo "Sad panda"
- find . -name config.log -exec grep -L "configure: exit 0" {} ";" | xargs cat
#- find . -name CMakeOutput.log -exec cat {} ";"
#- find . -name CMakeError.log -exec cat {} ";"
notifications:
  email:
    recipients:
    - jeff.science@gmail.com
    on_success:
    - change
    on_failure:
    - always
